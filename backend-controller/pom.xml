<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.1</version>
        <relativePath/>
        <!-- lookup parent from repository -->
    </parent>
    <groupId>org.rucca</groupId>
    <artifactId>snake.controller</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>snake.controller</name>
    <description>The controller for the distributed controllers of the snake game.</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>21</java.version>
        <kotlin.version>2.1.0</kotlin.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.2.28</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.11.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>./openapi.yml</inputSpec>
                            <generatorName>kotlin-spring</generatorName>
                            <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                            <modelNameSuffix>DTO</modelNameSuffix>
                            <configOptions>
                                <java8>true</java8>
                                <interfaceOnly>true</interfaceOnly>
                                <modelPackage>org.rucca.snake.controller.model</modelPackage>
                                <apiPackage>org.rucca.snake.controller.api</apiPackage>
                                <useBeanValidation>true</useBeanValidation>
                                <exceptionHandler>false</exceptionHandler>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-generated-api</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <!-- Copy the generated API files to the correct package. -->
                                <delete dir="src/main/kotlin/org/rucca/snake/controller/api"/>
                                <delete dir="src/main/kotlin/org/rucca/snake/controller/model"/>
                                <copy todir="src/main/kotlin/org/rucca/snake/controller/api">
                                    <fileset dir="target/generated-sources/openapi/src/main/kotlin/org/rucca/snake/controller/api"/>
                                </copy>
                                <copy todir="src/main/kotlin/org/rucca/snake/controller/model">
                                    <fileset dir="target/generated-sources/openapi/src/main/kotlin/org/rucca/snake/controller/model"/>
                                </copy>
                                <delete file="src/main/kotlin/org/rucca/snake/controller/model/000_IMPORTANT_NOTICE.md"/>
                                <echo append="true" file="src/main/kotlin/org/rucca/snake/controller/model/000_IMPORTANT_NOTICE.md"># All files in this directory are generated!${line.separator}${line.separator}</echo>
                                <echo append="true" file="src/main/kotlin/org/rucca/snake/controller/model/000_IMPORTANT_NOTICE.md">All files in this directory are generated, including this markdown, so DO NOT MODIFY them!${line.separator}${line.separator}</echo>
                                <echo append="true" file="src/main/kotlin/org/rucca/snake/controller/model/000_IMPORTANT_NOTICE.md">If you want to modify the API, modify the OpenAPI specification file and run ```./mvnw install``` again.${line.separator}${line.separator}</echo>
                                <copy file="src/main/kotlin/org/rucca/snake/controller/model/000_IMPORTANT_NOTICE.md" todir="src/main/kotlin/org/rucca/snake/controller/api"/>
                                <delete dir="target/generated-sources/openapi"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>2.43.0</version>
                <configuration>
                    <java>
                        <googleJavaFormat/>
                    </java>
                    <kotlin>
                        <ktfmt>
                            <style>KOTLINLANG</style>
                        </ktfmt>
                    </kotlin>
                    <pom>
                        <sortPom>
                            <nrOfIndentSpace>4</nrOfIndentSpace>
                            <expandEmptyElements>false</expandEmptyElements>
                        </sortPom>
                    </pom>
                    <sql>
                        <includes>
                            <include>design/DB/CREATE.sql</include>
                        </includes>
                        <dbeaver/>
                    </sql>
                    <markdown>
                        <includes>
                            <include>**/*.md</include>
                        </includes>
                    </markdown>
                </configuration>
                <executions>
                    <execution>
                        <id>Format generated sources</id>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                        <phase>generate-sources</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.2</version>
                <configuration>
                    <systemPropertyVariables>
                        <logging.level.root>WARN</logging.level.root>
                    </systemPropertyVariables>
                    <argLine>${argLine} -XX:+EnableDynamicAgentLoading</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
    </build>

</project>
